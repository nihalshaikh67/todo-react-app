{"version":3,"sources":["images/logo.png","component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","className","src","logo","alt","type","placeholder","value","onChange","e","target","title","onClick","element","index","newEditItem","find","editItem","updatedItems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,MAA0B,iC,OCwG1BA,EApGF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsCJ,oBAAS,GAA/C,mBAAMK,EAAN,KAAmBC,EAAnB,KACA,EAAmCN,mBAAS,MAA5C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,WACZ,GAAKR,EAGA,GAAGA,IAAcI,EAClBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAKC,KAAOL,EACJ,2BAAKI,GAAZ,IAAiBE,KAAKZ,IAEnBU,MAIfL,GAAgB,GAChBJ,EAAa,IACbM,EAAc,UAEb,CACD,IAAMM,EAAe,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMZ,GAClEG,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBZ,EAAa,SAnBbgB,MAAM,6BA6Cd,OACI,mCACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAKC,EAAMC,IAAI,SACpB,sEAEJ,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OAAOC,YAAY,sBAC3BC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAOzB,EAAayB,EAAEC,OAAOH,UAGvCpB,EAAgB,mBAAGc,UAAU,qBAAqBU,MAAM,WAAWC,QAASrB,IAAiB,mBAAGU,UAAU,qBAAqBU,MAAM,cAAcC,QAASrB,OAKpK,qBAAKU,UAAU,YAAf,SAIQhB,EAAMO,KAAI,SAACqB,EAASC,GAChB,OACI,sBAAKb,UAAU,WAAf,UACI,6BAAKY,EAAQlB,OACb,sBAAKM,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBU,MAAM,YAAYC,QAAS,kBA1CrF,SAAClB,GACjB,IAAIqB,EAAc9B,EAAM+B,MAAK,SAACvB,GAC1B,OAAOA,EAAKC,KAAOA,KAGvBN,GAAgB,GAChBJ,EAAa+B,EAAYpB,MACzBL,EAAcI,GAmC6FuB,CAASJ,EAAQnB,OACrF,mBAAGO,UAAU,2BAA2BU,MAAM,cAAcC,QAAS,kBAnD1F,SAACE,GAEhB,IAAMI,EAAejC,EAAMkC,QAAO,SAAC1B,GAC/B,OAAOqB,IAAUrB,EAAKC,MAE1BR,EAASgC,GA8CsGE,CAAWP,EAAQnB,YAJvEmB,EAAQnB,SAavD,qBAAKO,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAAaW,QA1ClE,WACd1B,EAAS,KAyCO,SAAoF,0DCrF7FmC,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ac1125fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e29cb290.png\";","import React, { useState } from 'react';\r\nimport logo from '../images/logo.png'\r\nimport '../App.css'\r\n\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const[toggleSubmit,setToggleSubmit] = useState(true);\r\n    const [isEditItem,setIsEditItem] = useState(null);\r\n\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert(\"Please Write Something..\")\r\n        } \r\n        else if(inputData && !toggleSubmit ){\r\n            setItems(\r\n                items.map((elem)=>{\r\n                    if(elem.id === isEditItem){\r\n                        return { ...elem,name:inputData}\r\n                    }\r\n                    return elem;\r\n                })\r\n                \r\n            )\r\n            setToggleSubmit(true);\r\n            setInputData('');\r\n            setIsEditItem(null)\r\n        }\r\n        else {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputData }\r\n            setItems([...items, allInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    }\r\n\r\n    const deleteItem = (index) => {\r\n\r\n        const updatedItems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        })\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    const editItem = (id) => {\r\n     let newEditItem = items.find((elem)=>{\r\n         return elem.id === id;\r\n     });\r\n    \r\n     setToggleSubmit(false);\r\n     setInputData(newEditItem.name);\r\n     setIsEditItem(id)\r\n     \r\n\r\n    }\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src={logo} alt=\"logo\" />\r\n                        <figcaption>Add your List Here ✌</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍ Add Items...\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        {\r\n                            toggleSubmit ?  <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i> :  <i className=\"fa fa-edit add-btn\" title=\"Update Item\" onClick={addItem}></i>\r\n                        }\r\n\r\n                       \r\n                    </div>\r\n                    <div className=\"showItems\">\r\n\r\n\r\n                        {\r\n                            items.map((element, index) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={element.id}>\r\n                                        <h3>{element.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(element.id)}></i>\r\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => deleteItem(element.id)}></i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span>CHECK LIST</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import './App.css';\nimport Todo from './component/Todo';\n\nfunction App() {\n  return (\n    <>\n    <Todo/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
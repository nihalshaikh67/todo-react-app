{"version":3,"sources":["images/logo.png","component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["getLocalItems","list","localStorage","getItem","console","log","JSON","parse","Todo","useState","inputData","setInputData","inputData1","setInputData1","items","setItems","searchResult","setSearchResult","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","setMyitem","val","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","useEffect","res","filter","toLowerCase","includes","setItem","stringify","className","type","placeholder","value","onChange","e","target","src","logo","alt","title","onClick","element","index","newEditItem","find","editItem","updatedItems","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8fe2b95.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e29cb290.png\";","import React, { useState , useEffect} from 'react';\r\nimport logo from '../images/logo.png'\r\nimport '../App.css'\r\n\r\n//to get the data from Local Storage\r\n\r\nconst getLocalItems = () =>{\r\n    let list  = localStorage.getItem('lists');\r\n    console.log(list);\r\n    if(list){\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    }else{\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState('');\r\n    const [inputData1, setInputData1] = useState('');\r\n    const [items, setItems] = useState(getLocalItems());\r\n    const [searchResult,setSearchResult] = useState(getLocalItems());\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n    const setMyitem = (val) =>{\r\n        setItems(val);\r\n        setSearchResult(val);\r\n    }\r\n\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert(\"Please Write Something..\")\r\n        }\r\n        else if (inputData && !toggleSubmit) {\r\n            setMyitem(\r\n                items.map((elem) => {\r\n                    if (elem.id === isEditItem) {\r\n                        return { ...elem, name: inputData }\r\n                    }\r\n                    return elem;\r\n                })\r\n\r\n            )\r\n            setToggleSubmit(true);\r\n            setInputData('');\r\n            setIsEditItem(null)\r\n        }\r\n        else {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputData }\r\n            setMyitem([...items, allInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    }\r\n\r\n    const deleteItem = (index) => {\r\n\r\n        const updatedItems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        })\r\n        setMyitem(updatedItems);\r\n    }\r\n\r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return elem.id === id;\r\n        });\r\n\r\n        setToggleSubmit(false);\r\n        setInputData(newEditItem.name);\r\n        setIsEditItem(id)\r\n\r\n\r\n    }\r\n    const removeAll = () => {\r\n        setMyitem([]);\r\n    }\r\n    useEffect(()=>{\r\n      \r\n       let res =  items.filter((val)=>{\r\n          return (val.name.toLowerCase().includes(inputData1.toLowerCase()))  \r\n        });\r\n\r\n        setSearchResult(res);\r\n          },[inputData1]);\r\n\r\n          //add data to local Storage\r\n\r\n          useEffect(()=>{\r\n                localStorage.setItem('lists',JSON.stringify(items))\r\n          },[items])\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"search\">\r\n\r\n                    <input type=\"text\" placeholder=\"🔎 Search Items...\"\r\n                        value={inputData1}\r\n                        onChange={(e) => setInputData1(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src={logo} alt=\"logo\" />\r\n                        <figcaption>Add your List Here ✌</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍ Add Items...\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        {\r\n                            toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i> : <i className=\"fa fa-edit add-btn\" title=\"Update Item\" onClick={addItem}></i>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n\r\n\r\n                        {\r\n                            searchResult.map((element, index) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={element.id}>\r\n                                        <h3>{element.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(element.id)}></i>\r\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => deleteItem(element.id)}></i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span>CHECK LIST</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import './App.css';\nimport Todo from './component/Todo';\n\nfunction App() {\n  return (\n    <>\n    <Todo/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}